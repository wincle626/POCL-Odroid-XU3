m4_define([POAT_AMDSDK_SETUP],[
  AT_SETUP([$1])
  AT_KEYWORDS([amdsdk3.0 amdsdk long $1 $2])
  AT_SKIP_IF([AS_CASE([" $POAT_TESTSUITES "],[*" amdsdk3_0 "*],[false],[:])])
  # AMD APP SDK tests require ICD loader with
  AT_SKIP_IF([! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h])
])

m4_define([POAT_AMDSDK_HSA_SETUP],[
  AT_SETUP([$1])
  AT_KEYWORDS([hsa amdsdk3.0 amdsdk long $1 $2])
  AT_SKIP_IF([AS_CASE([" $POAT_TESTSUITES "],[*" amdsdk3_0 "*],[false],[:])])
  # AMD APP SDK tests require ICD loader with
  AT_SKIP_IF([! grep -q "#define BUILD_ICD" $abs_top_builddir/config.h])
])

##########################################################################

AT_BANNER([AMD APP SDK 3.0 tests])

POAT_AMDSDK_SETUP([asyncdatatransfer])
# needs asynch properties implemented
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_AsyncDataTransfer -sC $abs_top_builddir/examples/AMDSDK3.0 | grep "Passed" | sed -e 's/^[ \t]*//'], 0,
[SyncKernel verification  : Passed!
AsyncKernel verification : Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([atomiccounters])
# Expected Error: Device does not support cl_ext_atomic_counters_32 extension!
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_AtomicCounters -sC $abs_top_builddir/examples/AMDSDK3.0 | grep "Encryption Passed"], 0,
[Encryption Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([basicdebug])
# This tests debugging features by executing a kernel that writes
# out of bounds of a local array. No point testing it here as the
# result should be undefined (basic device crashes, pthread device
# silently passes). It passes if the kernel's local array size is
# increased so there is no out of bounds error.
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_BasicDebug -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([binarysearchdevicesideenqueue])
# requires dev side queue
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_BinarySearchDeviceSideEnqueue -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([binomialoption-repl])
AT_XFAIL_IF([grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc &&
             grep -q "define LLVM_3_2" $abs_top_builddir/config.h])
AT_CHECK_UNQUOTED([POCL_WORK_GROUP_METHOD=repl make test_BinomialOption -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([binomialoption-loops])
AT_CHECK_UNQUOTED([POCL_WORK_GROUP_METHOD=loops make test_BinomialOption -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([binomialoptionmultigpu])
AT_SKIP_IF([ ! test -e $abs_top_builddir/examples/AMDSDK3.0/AMD-APP-SDK-v3.0-RC-lnx64/samples/opencl/cl/BinomialOptionMultiGPU/bin/x86_64/Release/BinomialOptionMultiGPU])
AT_CHECK_UNQUOTED([make test_BinomialOptionMultiGPU -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([bitonicsort])
AT_CHECK_UNQUOTED([make test_BitonicSort -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([blackscholes])
AT_CHECK_UNQUOTED([make test_BlackScholes -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([blackscholesdp])
AT_KEYWORDS([cl_amd_fp64])
AT_XFAIL_IF([grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc])
AT_XFAIL_IF([grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv])
AT_CHECK_UNQUOTED([make test_BlackScholesDP -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_SETUP([boxfilter])
AT_CHECK_UNQUOTED([make test_BoxFilter -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep "Passed|failed"], 0,
[Passed!
Verifying results...Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([boxfilterGL])
# doesnt work
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_BoxFilterGL -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep "Passed|failed"], 0,
[Passed!
Verifying results...Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([bufferbandwidth])
# freezes/takes forever
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_BufferBandwidth -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep "Passed|failed"], 0,
[ Verification Passed!
 Verification Passed!
Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([bufferImageInterop])
# Error: Selected device doesn't support Buffer-Image
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_BufferImageInterop -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep "Passed|failed"], 0,
[Passed!
Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([builtinscan])
# requires work_group_scan_inclusive_add, work_group_barrier & work_group_broadcast
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_BuiltInScan -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep "Passed|failed"], 0,
[OK
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([calcpie])
AT_CHECK_UNQUOTED([make test_CalcPie -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep "Passed|failed"], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([concurrentkernel])
AT_CHECK_UNQUOTED([make test_ConcurrentKernel -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep "Passed|failed"], 0,
[ Sequential Kernel verification : Passed!
 Concurrent Kernel verification : Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([constantbandwidth])
AT_CHECK_UNQUOTED([make test_ConstantBandwidth -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep Passed], 0,
[Passed!
Passed!
Passed!
Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_SETUP([cpluspluswrapper])
# insists on AMD platform
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_CplusplusWrapper -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([dct])
AT_CHECK_UNQUOTED([make test_DCT -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([deviceenqueuebfs])
# requires dev queue
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_DeviceEnqueueBFS -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([devicefission])
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_DeviceFission -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([devicefission11ext])
# Expected Error: Device does not support cl_ext_device_fission extension!
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_DeviceFission11Ext -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([dwthaar1d])
# 3.5 introduced the noduplicate attribute which, when
# used with barrier(), fixes this.
AT_XFAIL_IF([egrep -q "#define LLVM_3_4" $abs_top_builddir/config.h])
AT_CHECK_UNQUOTED([make test_DwtHaar1D -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([dwthaar1dcppkernel])
# Error: clBuildProgram failed. Error code : CL_INVALID_BUILD_OPTIONS (-x clc++)
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_DwtHaar1DCPPKernel -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([eigenvalue])
# Error: clBuildProgram failed. Error code : CL_INVALID_BUILD_OPTIONS (-x clc++)
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_EigenValue -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([extractprimes])
# requires dev queue
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_ExtractPrimes -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([fastwalshtransform])
AT_CHECK_UNQUOTED([make test_FastWalshTransform -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([fft])
# Build parameter clc++ not supported
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_FFT -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([finegrainsvm])
# freezes with every device - requires async running queue
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_FineGrainSVM -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([finegrainsvmcas])
AT_CHECK_UNQUOTED([make test_FineGrainSVMCAS -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
ignore, ignore)
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([floydwarshall])
AT_CHECK_UNQUOTED([make test_FloydWarshall -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([fluidsimulation2d])
# error: can't convert between vector values of different size ('uint' (aka 'unsigned int') and 'int8')
# It should be a legal implicit conversion according to 6.3 Operators. Some other error makes it
# break with Intel OCL also.
AT_XFAIL_IF(true)
AT_KEYWORDS([cl_amd_fp64])
AT_CHECK_UNQUOTED([make test_FluidSimulation2D -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_SETUP([gaussiannoise])
AT_CHECK_UNQUOTED([make test_GaussianNoise -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed | sed 's/ //g'], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([gaussiannoisegl])
#doesnt work
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_GaussianNoiseGL -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

#Benchmark test
#POAT_AMDSDK_SETUP([globalmemorybandwidth])
#AT_CHECK_UNQUOTED([make test_GlobalMemoryBandwidth -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
#[Passed!
#])
#AT_CLEANUP

POAT_AMDSDK_SETUP([hdrtonemapping])
AT_CHECK_UNQUOTED([make test_HDRToneMapping -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!!
], ignore)
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([heatpde])
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_HeatPDE -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep "Passed"], 0,
[Passed])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([helloworld])
AT_CHECK_UNQUOTED([make test_HelloWorld -sC $abs_top_builddir/examples/AMDSDK3.0 | egrep "GdkknVnqkc|HelloWorld"], 0,
[GdkknVnqkc
HelloWorld
])
AT_CLEANUP

POAT_AMDSDK_SETUP([histogram-repl])
AT_CHECK_UNQUOTED([POCL_WORK_GROUP_METHOD=repl make test_Histogram -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([histogram-loops])
AT_CHECK_UNQUOTED([POCL_WORK_GROUP_METHOD=loops make test_Histogram -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([histogramatomics])
AT_CHECK_UNQUOTED([make test_HistogramAtomics -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([imagebandwidth])
# GPU not found. Exiting application
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_ImageBandwidth -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([imagebinarization])
# requires work_group_barrier
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_ImageBinarization -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([imageoverlap])
AT_CHECK_UNQUOTED([make test_ImageOverlap -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Verifying result - Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([introstatickcppkernel])
# Error: clBuildProgram failed. Error code : CL_INVALID_BUILD_OPTIONS (-x clc++)
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_IntroStaticCPPKernel -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Verifying result - Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([kernellauch])
# GPU not found. Exiting application
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_KernelLaunch -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed!], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([kmeansautoclustering])
# doesn't find opencl library for some reason
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_KmeansAutoclustering -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

Benchmark test
POAT_AMDSDK_SETUP([ldsbandwidth])
# requires dev queue
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_LDSBandwidth -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
Passed!
Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([ludecomposition])
AT_KEYWORDS([cl_amd_fp64])
#test uses doubles
AT_XFAIL_IF([grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q powerpc])
AT_XFAIL_IF([grep HOST_CPU $abs_top_builddir/config.h | cut -d\" -f2 | grep -q armv])
AT_CHECK_UNQUOTED([make test_LUDecomposition -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_SETUP([mandelbrot])
AT_SKIP_IF([ grep "undef HAVE_GLEW" $abs_top_builddir/config.h ])
AT_SKIP_IF([ ! test -e $abs_top_builddir/examples/AMDSDK3.0/AMD-APP-SDK-v3.0-RC-lnx64/samples/opencl/cl/Mandelbrot/bin/x86_64/Release/Mandelbrot])
# undefined symbol: _Z7std_fmaDv4_fS_S_ with VML
AT_CHECK_UNQUOTED([make test_Mandelbrot -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_SETUP([matrixmuldouble])
AT_KEYWORDS([cl_amd_fp64])
AT_CHECK_UNQUOTED([make test_MatrixMulDouble -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([matrixmulimage])
AT_CHECK_UNQUOTED([make test_MatrixMulImage -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([matrixmultiplication])
# pocl error: encountered unimplemented part of the OpenCL specs in clCreateImage2D.c:119
#AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_MatrixMultiplication -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([matrixtranspose])
AT_CHECK_UNQUOTED([make test_MatrixTranspose -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([memorymodel-repl])
AT_CHECK_UNQUOTED([POCL_WORK_GROUP_METHOD=repl make test_MemoryModel -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([memorymodel-loops])
AT_CHECK_UNQUOTED([POCL_WORK_GROUP_METHOD=loops make test_MemoryModel -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([memoryoptimizations])
AT_CHECK_UNQUOTED([make test_MemoryOptimizations -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_SETUP([mersennetwister])
#Build parameter clc++ is not supported
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_MersenneTwister -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_SETUP([montecarloasian])
AT_CHECK_UNQUOTED([make test_MonteCarloAsian -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP


POAT_AMDSDK_SETUP([montecarloasiandp])
# passes arguments via a struct
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_MonteCarloAsianDP -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_SETUP([montecarloasianmultigpu])
AT_CHECK_UNQUOTED([make test_MonteCarloAsianMultiGPU -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([nbody])
AT_SKIP_IF([ grep "undef HAVE_GLEW" $abs_top_builddir/config.h ])
AT_SKIP_IF([ ! test -e $abs_top_builddir/examples/AMDSDK3.0/AMD-APP-SDK-v3.0-RC-lnx64/samples/opencl/cl/NBody/bin/x86_64/Release/NBody])
AT_CHECK_UNQUOTED([make test_NBody -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([pipeproducerconsumerkernels])
# no pipe support yet
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_PipeProducerConsumerKernels -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([prefixsum])
AT_CHECK_UNQUOTED([make test_PrefixSum -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([quasirandomsequence])
AT_CHECK_UNQUOTED([make test_QuasiRandomSequence -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([radixsort])
AT_CHECK_UNQUOTED([make test_RadixSort -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
], ignore)
AT_CLEANUP

POAT_AMDSDK_SETUP([rangeminimumquery])
# requires work_group_reduce_min
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_RangeMinimumQuery -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([recursivegaussian])
AT_CHECK_UNQUOTED([make test_RecursiveGaussian -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([recursivegaussianprogramscope])
# uses in-source global variable
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_RecursiveGaussian_ProgramScope -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([reduction])
AT_CHECK_UNQUOTED([make test_Reduction -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([regiongrowingsegmentation])
# requires dev queue
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_RegionGrowingSegmentation -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([scanlargearrays])
# Fails with vectorization. With wiloops and no unrolling, the vectorization won't apply.
AT_CHECK_UNQUOTED([make test_ScanLargeArrays -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([simpleconvolution])
AT_CHECK_UNQUOTED([make test_SimpleConvolution -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Verifying non-Separable Convolution Kernel result - Passed!
Verifying Separable Convolution Kernel result - Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([simpledepthimage])
#  *** ERROR ***  Requested image format is not supported
# Error: clCreateImage failed.(oclImage) Error code : CL_IMAGE_FORMAT_NOT_SUPPORTED
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_SimpleDepthImage -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Verifying 2D copy result - Passed!
Verifying 3D copy result - Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([simplegenericaddressspace])
# requires work_group_barrier
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_SimpleGenericAddressSpace -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([simplegl])
# doesn't find opecl library
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_SimpleGL -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([simpleimage])
AT_CHECK_UNQUOTED([make test_SimpleImage -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Verifying 2D copy result - Passed!
Verifying 3D copy result - Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([simplepipe])
# pipe not implemented
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_SimplePipe -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[OK
])
AT_CLEANUP

POAT_AMDSDK_SETUP([simplespir])
# Device side queue is unimplemented
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_SimpleSPIR -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[OK
])
AT_CLEANUP

POAT_AMDSDK_SETUP([soaversusaos])
#Build Options are : -x clc++ -D num1=4096 -D num2=4096
#Error: clBuildProgram failed. Error code : CL_INVALID_BUILD_OPTIONS
AT_SKIP_IF(true)
AT_CHECK_UNQUOTED([make test_SoAversusAoS -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([sobelfilter])
AT_CHECK_UNQUOTED([make test_SobelFilter -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([sobelfilterimage])
# segfault
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_SobelFilterImage -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([stringsearch])
AT_CHECK_UNQUOTED([make test_StringSearch -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([svmatomicsbinarytreeinsert])

AT_CHECK_UNQUOTED([make test_SVMAtomicsBinaryTreeInsert -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
AT_XFAIL_IF(true)
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([svmbinarytreesearch])
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_SVMBinaryTreeSearch -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP


POAT_AMDSDK_SETUP([template])
AT_CHECK_UNQUOTED([make test_Template -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([transferoverlap])
AT_CHECK_UNQUOTED([make test_TransferOverlap -sC $abs_top_builddir/examples/AMDSDK3.0 | grep "Passed"], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([transferoverlapcpp])
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_TransferOverlapCPP -sC $abs_top_builddir/examples/AMDSDK3.0 | grep "Passed"], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([unsharpmask])
# doesn't find opencl library
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_UnsharpMask -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_HSA_SETUP([urng])
AT_CHECK_UNQUOTED([make test_URNG -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed | cut -c -7], 0,
[Passed!
])
AT_CLEANUP

POAT_AMDSDK_SETUP([urngnoisegl])
# Error: clGetPlatformIDs failed. Error code : CL_PLATFORM_NOT_FOUND_KHR
AT_XFAIL_IF(true)
AT_CHECK_UNQUOTED([make test_URNGNoiseGL -sC $abs_top_builddir/examples/AMDSDK3.0 | grep Passed | cut -c -7], 0,
[Passed!
])
AT_CLEANUP
